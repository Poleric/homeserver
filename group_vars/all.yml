root:
    uid: 0
    gid: 0

    email: email@example.com
    timezone: "Etc/UTC"
    locale: "en"

    proxy:
        domain: "home.local"

    config:
        directory: "."

        movies:
            directory: "/home/{{ ansible_user }}/Movies"
            permissions: "rw"

        music:
            directory: "/home/{{ ansible_user }}/Music"
            permissions: "rw"

        photos:
            directory: "/home/{{ ansible_user }}/Photos"
            permissions: "rw"

        tv:
            directory: "/home/{{ ansible_user }}/Tv"
            permissions: "rw"

        books:
            directory: "/home/{{ ansible_user }}/Books"
            permissions: "rw"

        audiobooks:
            directory: "/home/{{ ansible_user }}/Audiobooks"
            permissions: "rw"

        torrents:
            directory: "/home/{{ ansible_user }}/Downloads"
            permissions: "rw"

caddy:
    config:
        cloudflare_token: ~

ddclient:
    enabled: false

    config:
        poll_seconds: 300

        #  https://ddclient.net/protocols.html
        protocols:
            -   protocol: cloudflare
                params: # params key and values are directly added into the protocol config
                    zone: example.tld
                    ttl: 1
                    password: ~
                hosts:
                    - example.tld
                    - name.example.tld
                #  The above configuration would result in the following config
                #  protocol=cloudflare
                #  zone=example.tld
                #  ttl=1
                #  password=...
                #  example.tld,name.example.tld

deluge:
    enabled: false

    proxy:
        hostname: "deluge"
        local_only: true

    config:
        extra_mounts: # extra mounts for use in accessing and downloading to local storage
            -   src: ~
                dest: ~

homepage:
    enabled: false

    proxy:
        hostname: "homepage"
        local_only: true  # is a bad idea to set to false

    config:
        settings: # Settings config as https://gethomepage.dev/configs/settings/#title
            title: "Homeserver"
            language: "{{ root.locale }}"
            showStats: true

        services:
            -   Networking:
                    -   Router:
                            icon: Local Router
                            href: http://192.168.0.1/
                            description: Router Homepage

        widgets:
            -   search:
                    provider: google # google, duckduckgo, bing, baidu, brave or custom
                    focus: true # Optional, will set focus to the search bar on page load
                    target: _blank # One of _self, _blank, _parent or _top
            -   resources:
                    cpu: true
                    memory: true
                    cputemp: true
                    uptime: true
                    units: metric # only used by cpu temp
                    refresh: 60000 # optional, in ms

        bookmarks:
            ~

jellyfin:
    enabled: false

    proxy:
        hostname: "jellyfin"
        local_only: true

pihole:
    enabled: false

    proxy:
        hostname: "pihole"
        local_only: true

    config:
        password: ~

samba:
    enabled: false

    config:
        users:
            -   username: ~
                password: ~
                uid: 1000
                gid: 1000
        shares:
            -   name: ~
                config: # key and value will be used for samba config
                    path: ~
                    available: "yes"
                    browsable: "yes"
                    writable: "yes"
                    "read only": "no"
                    "valid users": ~
                    public: "no"
                    "guest ok": "no"
                #  The above configuration would result in the following config
                #  [name]
                #  path = /shares
                #  available = yes
                #  browsable = yes
                #  writable = yes
                #  read only = no
                #  valid users = <username>
                #  public = no
                #  guest ok = no
        extra_mounts:
            -   src: ~
                dest: ~

vaultwarden:
    enabled: false

    proxy:
        hostname: "vaultwarden"
        local_only: true

    config:
        signup_allowed: true

wireguard:
    enabled: false

    proxy:
        web:
            hostname: "wg"
            port: 51821
            local_only: true
        vpn: # not actually proxied
            hostname: "vpn"  # the public facing hostname + domain name
            port: 51820

    config:
        web_password: ~
