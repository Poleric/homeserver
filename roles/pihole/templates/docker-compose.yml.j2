services:
    pihole:
        image: "{{ pihole.image.name }}:{{ pihole.docker.image.version }}"
        container_name: "{{ pihole.docker.container.name }}"
        restart: unless-stopped
        ports:
            - "53:53/tcp"
            - "53:53/udp"
        environment:
            TZ: "{{ root.timezone }}"
            WEBPASSWORD: "{{ pihole.config.password }}"
            VIRTUAL_HOST: "{{ pihole.proxy.hostname }}.{{ root.proxy.domain }}"
            VIRTUAL_PORT: 80
            PROXY_LOCATION: "{{ pihole.proxy.hostname }}"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./etc-pihole:/etc/pihole
            - ./etc-dnsmasq.d:/etc/dnsmasq.d
        dns:
            - 127.0.0.1
            - 8.8.8.8
        extra_hosts:
{% if "." in root.proxy.domain %}
            - "{{ root.proxy.domain }}:{{ ansible_facts.default_ipv4.address }}"
{% endif %}
{% for app in (pihole, deluge, homepage, jellyfin, vaultwarden) %}
{% if app.enabled %}
            - "{{ app.proxy.hostname }}.{{ root.proxy.domain }}:{{ ansible_facts.default_ipv4.address }}"
{% endif %}
{% endfor %}
        networks:
            - reverse-proxy
        labels:
            caddy: "{{ pihole.proxy.hostname }}.{{ root.proxy.domain }}"
{%  if pihole.proxy.local_only %}
            caddy.@denied.not: "remote_ip private_ranges"
            caddy.abort: "@denied"
{% endif %}
            caddy.reverse_proxy: "{{ '{{' }} upstreams {{ pihole.proxy.port }} {{ '}}' }}"
            homepage.group: System
            homepage.name: Pi-hole
            homepage.icon: pihole.png
            homepage.href: "https://{{ pihole.proxy.hostname }}.{{ root.proxy.domain }}/admin"
            homepage.description: DNS Blocker
            homepage.widget.type: pihole
            homepage.widget.url: "https://{{ pihole.proxy.hostname }}.{{ root.proxy.domain }}"

networks:
    reverse-proxy:
        external: true
